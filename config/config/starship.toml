# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

format = """
[](black)\
$os\
$directory\
$git_branch\
$git_status\
$env_var\
[](black)\
$fill\
[](black)\
$cmd_duration\
$dart\
$deno\
$dotnet\
$golang\
$nodejs\
$python\
$ruby\
$rust\
$time\
[](black)
$character
"""

add_newline = false
palette = 'nordfox'

[package]
disabled = true

[palettes.nordfox]
foreground = '#cdcecf'
background = '#2e3440'
separator = '#60728a'
black = '#3b4252'
red = '#bf616a'
green = '#a3be8c'
yellow = '#ebcb8b'
blue = '#81a1c1'
cyan = '#88c0d0'
white = '#e6e9f0'

[palettes.carbonfox]
foreground = '#f2f4f8'
background = '#161616'
separator = '#60728a'
black = '#282828'
red = '#ee5396'
green = '#25be6a'
yellow = '#08bdba'
blue = '#78a9ff'
cyan = '#33b1ff'
white = '#dfdfe0'

[palettes.github_dark_default]
background = '#0d1117'
foreground = '#e6edf3'
separator = '#6e7681'
black = '#111d2e'
red = '#ff7b72'
green = '#3fb950'
yellow = '#d29922'
blue = '#58a6ff'
cyan = '#39c5cf'
white = '#b1bac4'

## Left prompt
[os]
format = '[ $symbol ]($style)'
style = 'bg:black fg:foreground bold'
disabled = false

[os.symbols]
Alpaquita = " "
Alpine = " "
AlmaLinux = " "
Amazon = " "
Android = " "
Arch = " "
Artix = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Garuda = "󰛓 "
Gentoo = " "
HardenedBSD = "󰞌 "
Illumos = "󰈸 "
Kali = " "
Linux = " "
Mabox = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
OpenBSD = "󰈺 "
openSUSE = " "
OracleLinux = "󰌷 "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
RockyLinux = " "
Redox = "󰀘 "
Solus = "󰠳 "
SUSE = " "
Ubuntu = " "
Unknown = " "
Void = " "
Windows = "󰍲 "

[directory]
truncation_length = 0
truncate_to_repo = true
format = '[ $read_only]($read_only_style)[$path ]($style)'
style = 'bg:black fg:foreground bold'
read_only = '󰌾 '
read_only_style = 'bg:black fg:red'
truncation_symbol = ''
use_os_path_sep = false

[git_branch]
format = '[ ](bg:black fg:foreground)[$symbol $branch ]($style)'
symbol = ''                                                      # nf-pl-branch
style = 'bg:black fg:green'

# TODO: もっといい感じにやる
# https://starship.rs/config/#git-status
[git_status]
format = '[$all_status ]($style)'
style = 'bg:black fg:foreground'
conflicted = '='
ahead = '⇡'
behind = '⇣'
diverged = '⇕'
up_to_date = ''
untracked = '?'
stashed = '$'
modified = '!'
staged = '+'
renamed = '»'
deleted = '✘'

[env_var.venv]
variable = 'VIRTUAL_ENV'
format = '[ ](bg:black fg:foreground)[venv]($style)[ ](bg:black fg:foreground)'
style = 'bg:black fg:blue underline bold italic'

[fill]
symbol = ' '
style = 'black'

[cmd_duration]
min_time = 2_000
show_milliseconds = false
format = '[ 󱦟 $duration ]($style)'
style = 'bg:black fg:foreground'

[time]
format = '[  $time ]($style)'
time_format = '%H:%M'
style = 'bg:black fg:foreground'
disabled = false

## Runtimes
[dart]
format = '[ $symbol $version ]($style)[](bg:black fg:foreground)'
version_format = 'v${raw}'
symbol = ''                                                       # nf-seti-dart
detect_extensions = ['dart']
detect_files = ['pubspec.yaml', 'pubspec.yml', 'pubspec.lock']
style = 'bg:black fg:blue'

[deno]
format = '[ $symbol $version ]($style)[](bg:black fg:foreground)'
version_format = 'v${raw}'
symbol = ''                                                       # nf-cod-snake
detect_extensions = []
detect_files = ['deno.json', 'deno.jsonc']
style = 'bg:black fg:green'

[dotnet]
format = '[ $symbol $version ]($style)[](bg:black fg:foreground)'
version_format = 'v${raw}'
symbol = '󰪮'                                                       # nf-md-dot_net
detect_extensions = ['csproj', 'fsproj', 'xproj', 'sln']
detect_files = []
style = 'bg:black fg:blue'

[golang]
format = '[ $symbol $version ]($style)[](bg:black fg:foreground)'
version_format = 'v${raw}'
symbol = '󰟓'                                                       # nf-md-language_go
detect_extensions = ['go']
detect_files = ['go.mod']
style = 'bg:black fg:blue'

[nodejs]
format = '[ $symbol $version ]($style)[](bg:black fg:foreground)'
version_format = 'v${raw}'
symbol = '󰎙'                                                       # nf-md-nodejs
detect_extensions = []
detect_files = ['package.json', '.node-version']
detect_folders = ['node_modules']
style = 'bg:black fg:green'

[python]
format = '[ $symbol $version ]($style)[](bg:black fg:foreground)'
version_format = 'v${raw}'
symbol = ''                                                             # nf-dev-python
detect_extensions = ['py']
detect_files = ['pyproject.toml', 'requirements.txt', '.python-version']
detect_folders = ['venv', '.venv']
style = 'bg:black fg:blue'

[ruby]
format = '[ $symbol $version ]($style)[](bg:black fg:foreground)'
version_format = 'v${raw}'
symbol = ''                                                       # nf-cod-ruby
detect_extensions = ['rb']
detect_files = ['Gemfile', '.ruby-version']
detect_folders = []
style = 'bg:black fg:red'

[rust]
format = '[ $symbol $version ]($style)[](bg:black fg:foreground)'
version_format = 'v${raw}'
symbol = ''                                                       # nf-dev-rust
detect_extensions = ['rs']
detect_files = ['Cargo.toml', 'Cargo.lock']
detect_folders = []
style = 'bg:black fg:red'
